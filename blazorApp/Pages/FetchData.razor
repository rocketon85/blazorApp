@page "/fetchdata"
@inject APIService apiService
@inject SignalRService signalService
@using blazorApp.Extensions;
@using blazorApp.Models.API;
@using blazorApp.Services;

<PageTitle>Cars List</PageTitle>

<h1>Cars List</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (cars == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Brand</th>
                <th>Model</th>
                <th>Fuel</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
                <tr>
                    <td>@car.Id</td>
                    <td>@car.BrandName</td>
                    <td>@car.ModelName</td>
                    <td>@car.FuelName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ApiInfoModel? apiInfo;
    private CarViewModel[]? cars;
    private AuthRespModel? authResp;
    private CarViewModel? carResp;

    //[Inject]
    //private TodoService todoService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        signalService.messageRecived += (sender, message) =>
        {
            Console.WriteLine(message);
        };
        apiInfo = await apiService.Info();
        authResp = await apiService.Authenticate(new AuthRequest("admin", "admin123"));
        carResp = await apiService.CarAdd(new CarCreateModel("Auto Nuevo", 1, 1, 1));
        cars = await apiService.CarList();
        var i = 0;
        i++;

        signalService.SendMessage("holaaa");
    }

   

}
